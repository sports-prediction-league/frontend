{
  "erc20": [
    {
      "type": "impl",
      "name": "UpgradeableImpl",
      "interface_name": "openzeppelin_upgrades::interface::IUpgradeable"
    },
    {
      "type": "interface",
      "name": "openzeppelin_upgrades::interface::IUpgradeable",
      "items": [
        {
          "type": "function",
          "name": "upgrade",
          "inputs": [
            {
              "name": "new_class_hash",
              "type": "core::starknet::class_hash::ClassHash"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        }
      ]
    },
    {
      "type": "struct",
      "name": "core::integer::u256",
      "members": [
        { "name": "low", "type": "core::integer::u128" },
        { "name": "high", "type": "core::integer::u128" }
      ]
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [{ "name": "value", "type": "core::integer::u256" }],
      "outputs": [],
      "state_mutability": "external"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        {
          "name": "recipient",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        { "name": "amount", "type": "core::integer::u256" }
      ],
      "outputs": [],
      "state_mutability": "external"
    },
    {
      "type": "impl",
      "name": "ERC20MixinImpl",
      "interface_name": "openzeppelin_token::erc20::interface::ERC20ABI"
    },
    {
      "type": "enum",
      "name": "core::bool",
      "variants": [
        { "name": "False", "type": "()" },
        { "name": "True", "type": "()" }
      ]
    },
    {
      "type": "struct",
      "name": "core::byte_array::ByteArray",
      "members": [
        {
          "name": "data",
          "type": "core::array::Array::<core::bytes_31::bytes31>"
        },
        { "name": "pending_word", "type": "core::felt252" },
        { "name": "pending_word_len", "type": "core::integer::u32" }
      ]
    },
    {
      "type": "interface",
      "name": "openzeppelin_token::erc20::interface::ERC20ABI",
      "items": [
        {
          "type": "function",
          "name": "total_supply",
          "inputs": [],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "balance_of",
          "inputs": [
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "allowance",
          "inputs": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "transfer",
          "inputs": [
            {
              "name": "recipient",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            { "name": "amount", "type": "core::integer::u256" }
          ],
          "outputs": [{ "type": "core::bool" }],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "transfer_from",
          "inputs": [
            {
              "name": "sender",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "recipient",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            { "name": "amount", "type": "core::integer::u256" }
          ],
          "outputs": [{ "type": "core::bool" }],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "approve",
          "inputs": [
            {
              "name": "spender",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            { "name": "amount", "type": "core::integer::u256" }
          ],
          "outputs": [{ "type": "core::bool" }],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "name",
          "inputs": [],
          "outputs": [{ "type": "core::byte_array::ByteArray" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "symbol",
          "inputs": [],
          "outputs": [{ "type": "core::byte_array::ByteArray" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "decimals",
          "inputs": [],
          "outputs": [{ "type": "core::integer::u8" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "totalSupply",
          "inputs": [],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "balanceOf",
          "inputs": [
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "transferFrom",
          "inputs": [
            {
              "name": "sender",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "recipient",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            { "name": "amount", "type": "core::integer::u256" }
          ],
          "outputs": [{ "type": "core::bool" }],
          "state_mutability": "external"
        }
      ]
    },
    {
      "type": "impl",
      "name": "OwnableMixinImpl",
      "interface_name": "openzeppelin_access::ownable::interface::OwnableABI"
    },
    {
      "type": "interface",
      "name": "openzeppelin_access::ownable::interface::OwnableABI",
      "items": [
        {
          "type": "function",
          "name": "owner",
          "inputs": [],
          "outputs": [
            { "type": "core::starknet::contract_address::ContractAddress" }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "transfer_ownership",
          "inputs": [
            {
              "name": "new_owner",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "renounce_ownership",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "transferOwnership",
          "inputs": [
            {
              "name": "newOwner",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "renounceOwnership",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        }
      ]
    },
    {
      "type": "constructor",
      "name": "constructor",
      "inputs": [
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
      "kind": "struct",
      "members": [
        {
          "name": "from",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "to",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        { "name": "value", "type": "core::integer::u256", "kind": "data" }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
      "kind": "struct",
      "members": [
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "spender",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        { "name": "value", "type": "core::integer::u256", "kind": "data" }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "Transfer",
          "type": "openzeppelin_token::erc20::erc20::ERC20Component::Transfer",
          "kind": "nested"
        },
        {
          "name": "Approval",
          "type": "openzeppelin_token::erc20::erc20::ERC20Component::Approval",
          "kind": "nested"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
      "kind": "struct",
      "members": [
        {
          "name": "previous_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "new_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
      "kind": "struct",
      "members": [
        {
          "name": "previous_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "new_owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "OwnershipTransferred",
          "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          "kind": "nested"
        },
        {
          "name": "OwnershipTransferStarted",
          "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          "kind": "nested"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
      "kind": "struct",
      "members": [
        {
          "name": "class_hash",
          "type": "core::starknet::class_hash::ClassHash",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "Upgraded",
          "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
          "kind": "nested"
        }
      ]
    },
    {
      "type": "event",
      "name": "contract::spl_token::spl_token::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "ERC20Event",
          "type": "openzeppelin_token::erc20::erc20::ERC20Component::Event",
          "kind": "flat"
        },
        {
          "name": "OwnableEvent",
          "type": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          "kind": "flat"
        },
        {
          "name": "UpgradeableEvent",
          "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
          "kind": "flat"
        }
      ]
    }
  ],
  "spl": [
    { "type": "impl", "name": "SPLImpl", "interface_name": "contract::ISPL" },
    {
      "type": "struct",
      "name": "contract::User",
      "members": [
        { "name": "id", "type": "core::felt252" },
        { "name": "username", "type": "core::felt252" },
        {
          "name": "address",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "type": "struct",
      "name": "core::integer::u256",
      "members": [
        { "name": "low", "type": "core::integer::u128" },
        { "name": "high", "type": "core::integer::u128" }
      ]
    },
    {
      "type": "struct",
      "name": "contract::Leaderboard",
      "members": [
        { "name": "user", "type": "contract::User" },
        { "name": "total_score", "type": "core::integer::u256" }
      ]
    },
    {
      "type": "enum",
      "name": "core::bool",
      "variants": [
        { "name": "False", "type": "()" },
        { "name": "True", "type": "()" }
      ]
    },
    {
      "type": "struct",
      "name": "contract::Match",
      "members": [
        { "name": "inputed", "type": "core::bool" },
        { "name": "id", "type": "core::felt252" },
        { "name": "timestamp", "type": "core::integer::u64" },
        { "name": "round", "type": "core::integer::u256" }
      ]
    },
    {
      "type": "struct",
      "name": "contract::Score",
      "members": [
        { "name": "inputed", "type": "core::bool" },
        { "name": "match_id", "type": "core::felt252" },
        { "name": "home", "type": "core::integer::u256" },
        { "name": "away", "type": "core::integer::u256" }
      ]
    },
    {
      "type": "struct",
      "name": "contract::Reward",
      "members": [
        {
          "name": "user",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        { "name": "reward", "type": "core::integer::u256" }
      ]
    },
    {
      "type": "struct",
      "name": "contract::Prediction",
      "members": [
        { "name": "inputed", "type": "core::bool" },
        { "name": "match_id", "type": "core::felt252" },
        { "name": "home", "type": "core::integer::u256" },
        { "name": "away", "type": "core::integer::u256" },
        { "name": "stake", "type": "core::integer::u256" }
      ]
    },
    {
      "type": "enum",
      "name": "core::option::Option::<contract::Leaderboard>",
      "variants": [
        { "name": "Some", "type": "contract::Leaderboard" },
        { "name": "None", "type": "()" }
      ]
    },
    {
      "type": "struct",
      "name": "contract::PredictionDetails",
      "members": [
        { "name": "user", "type": "contract::User" },
        { "name": "prediction", "type": "contract::Prediction" }
      ]
    },
    {
      "type": "struct",
      "name": "contract::MatchPrediction",
      "members": [
        {
          "name": "predictions",
          "type": "core::array::Array::<contract::PredictionDetails>"
        },
        { "name": "match_pool", "type": "core::integer::u256" }
      ]
    },
    {
      "type": "interface",
      "name": "contract::ISPL",
      "items": [
        {
          "type": "function",
          "name": "register_user",
          "inputs": [{ "name": "user", "type": "contract::User" }],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "get_user_by_id",
          "inputs": [{ "name": "id", "type": "core::felt252" }],
          "outputs": [{ "type": "contract::User" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_user_by_address",
          "inputs": [
            {
              "name": "address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [{ "type": "contract::User" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "upgrade",
          "inputs": [
            {
              "name": "impl_hash",
              "type": "core::starknet::class_hash::ClassHash"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "get_version",
          "inputs": [],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_leaderboard_by_round",
          "inputs": [
            { "name": "start_index", "type": "core::integer::u256" },
            { "name": "size", "type": "core::integer::u256" },
            { "name": "round", "type": "core::integer::u256" }
          ],
          "outputs": [
            { "type": "core::array::Array::<contract::Leaderboard>" }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_leaderboard",
          "inputs": [
            { "name": "start_index", "type": "core::integer::u256" },
            { "name": "size", "type": "core::integer::u256" }
          ],
          "outputs": [
            { "type": "core::array::Array::<contract::Leaderboard>" }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "register_matches",
          "inputs": [
            {
              "name": "matches",
              "type": "core::array::Array::<contract::Match>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "set_scores",
          "inputs": [
            {
              "name": "scores",
              "type": "core::array::Array::<contract::Score>"
            },
            {
              "name": "rewards",
              "type": "core::array::Array::<contract::Reward>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "get_user_predictions",
          "inputs": [
            { "name": "round", "type": "core::integer::u256" },
            {
              "name": "user",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [{ "type": "core::array::Array::<contract::Prediction>" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_match_scores",
          "inputs": [{ "name": "round", "type": "core::integer::u256" }],
          "outputs": [{ "type": "core::array::Array::<contract::Score>" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_current_round",
          "inputs": [],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "is_address_registered",
          "inputs": [
            {
              "name": "address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [{ "type": "core::bool" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_user_total_scores",
          "inputs": [
            {
              "name": "address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "get_first_position",
          "inputs": [],
          "outputs": [
            { "type": "core::option::Option::<contract::Leaderboard>" }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "make_bulk_prediction",
          "inputs": [
            {
              "name": "predictions",
              "type": "core::array::Array::<contract::Prediction>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "make_prediction",
          "inputs": [{ "name": "prediction", "type": "contract::Prediction" }],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "update_erc20",
          "inputs": [
            {
              "name": "new_address",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "get_match_predictions",
          "inputs": [{ "name": "match_id", "type": "core::felt252" }],
          "outputs": [{ "type": "contract::MatchPrediction" }],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "claim_reward",
          "inputs": [],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "get_user_reward",
          "inputs": [
            {
              "name": "user",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [{ "type": "core::integer::u256" }],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "constructor",
      "name": "constructor",
      "inputs": [
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "erc20_token",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "type": "event",
      "name": "contract::SPL::Upgraded",
      "kind": "struct",
      "members": [
        {
          "name": "implementation",
          "type": "core::starknet::class_hash::ClassHash",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "contract::SPL::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "Upgraded",
          "type": "contract::SPL::Upgraded",
          "kind": "nested"
        }
      ]
    }
  ]
}
